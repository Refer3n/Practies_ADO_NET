// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pract4.DAL;

#nullable disable

namespace Pract4.DAL.Migrations
{
    [DbContext(typeof(StudentsContext))]
    partial class StudentsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pract4.DAL.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "johnDoe@gmail.com",
                            FirstName = "John",
                            Phone = "123456789",
                            SecondName = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            Email = "janeSmith@gmail.com",
                            FirstName = "Emily",
                            Phone = "987654321",
                            SecondName = "Smith"
                        },
                        new
                        {
                            Id = 3,
                            Email = "maryJohnson@gmail.com",
                            FirstName = "Mary",
                            Phone = "555555555",
                            SecondName = "Johnson"
                        });
                });

            modelBuilder.Entity("Pract4.DAL.Entities.StudentCard", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfIssue")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("StudentCards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfIssue = new DateTime(2023, 9, 16, 16, 53, 15, 177, DateTimeKind.Local).AddTicks(559),
                            IdNumber = "A12345",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            DateOfIssue = new DateTime(2023, 9, 16, 16, 53, 15, 177, DateTimeKind.Local).AddTicks(595),
                            IdNumber = "B54321",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            DateOfIssue = new DateTime(2023, 9, 16, 16, 53, 15, 177, DateTimeKind.Local).AddTicks(597),
                            IdNumber = "C67890",
                            Status = false
                        });
                });

            modelBuilder.Entity("Pract4.DAL.Entities.StudentCard", b =>
                {
                    b.HasOne("Pract4.DAL.Entities.Student", "Student")
                        .WithOne("StudentCard")
                        .HasForeignKey("Pract4.DAL.Entities.StudentCard", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Pract4.DAL.Entities.Student", b =>
                {
                    b.Navigation("StudentCard")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
